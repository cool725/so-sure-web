# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:

services:
    app.user:
        class: AppBundle\Security\FOSUBUserProvider
        arguments: ["@fos_user.user_manager",{facebook: facebook_id}]
        calls:
            - [setFacebook, ['@app.facebook']]

    app.user.cognitoidentity:
        class: AppBundle\Security\CognitoIdentityUserProvider
        arguments:
            user_manager:   "@fos_user.user_manager"
            dm:             "@doctrine_mongodb.odm.default_document_manager"
            coginto:        "@aws.cognito"
            developerLogin: "%cognito_developer_login%"
            identityPoolId: "%aws_cognito_identitypoolid%"
            logger:         "@logger"
            facebook:       "@app.facebook"

    app.user.cognitoidentity.authenticator:
        class: AppBundle\Security\CognitoIdentityAuthenticator
        arguments:
            httpUtils: "@security.http_utils"
            logger:    "@logger"

    app.facebook:
        class: AppBundle\Service\FacebookService
        arguments:
            logger:    "@logger"
            router:    "@router"
            fb_appid:  "%fb_appid%"
            fb_secret: "%fb_secret%"

    app.mailchimp.prelaunch:
        class: AppBundle\Service\MailchimpService
        arguments:
          logger: "@logger"
          apikey: %mailchimp_apikey%
          list: %mailchimp_prelaunch_list%
          environment: %kernel.environment%

    app.gocardless:
        class: AppBundle\Service\GocardlessService
        arguments:
            dm:          "@doctrine_mongodb.odm.default_document_manager"
            logger:      "@logger"
            policy:      "@app.policy"
            accessToken: "%gocardless_apikey%"
            prod:        "%gocardless_prod%"

    app.fraud:
        class: AppBundle\Service\FraudService
        arguments:
            dm:          "@doctrine_mongodb.odm.default_document_manager"
            logger:      "@logger"

    app.judopay:
        class: AppBundle\Service\JudopayService
        arguments:
            dm:          "@doctrine_mongodb.odm.default_document_manager"
            logger:      "@logger"
            policy:      "@app.policy"
            mailer:      "@mailer"
            templating:  "@templating"
            apiToken:    "%judopay_apitoken%"
            apiSecret:   "%judopay_apisecret%"
            judoId:      "%judopay_id%"
            environment: "%kernel.environment%"

    app.barclays:
        class: AppBundle\Service\BarclaysService
        arguments:
            dm:          "@doctrine_mongodb.odm.default_document_manager"
            logger:      "@logger"

    app.lloyds:
        class: AppBundle\Service\LloydsService
        arguments:
            dm:          "@doctrine_mongodb.odm.default_document_manager"
            logger:      "@logger"

    app.user.launch:
        class: AppBundle\Service\LaunchUserService
        arguments:
            dm:         "@doctrine_mongodb.odm.default_document_manager"
            logger:     "@logger"
            mailchimp:  "@app.mailchimp.prelaunch"
            mailer:     "@mailer"
            templating: "@templating"
            router:     "@api.router"
            shortLink:  "@app.shortlink"

    app.invitation:
        class: AppBundle\Service\InvitationService
        arguments:
            dm:         "@doctrine_mongodb.odm.default_document_manager"
            logger:     "@logger"
            mailer:     "@mailer"
            templating: "@templating"
            router:     "@api.router"
            shortLink:  "@app.shortlink"
            sms:        "@app.sms"
            rateLimit:  "@app.ratelimit"
            push:       "@app.push"

    app.push:
        class: AppBundle\Service\PushService
        arguments:
            logger:     "@logger"
            sns:        "@aws.sns"

    app.claims:
        class: AppBundle\Service\ClaimsService
        arguments:
            dm:          "@doctrine_mongodb.odm.default_document_manager"
            logger:      "@logger"
            mailer:      "@mailer"
            templating:  "@templating"
            router:      "@api.router"
            environment: "%kernel.environment%"

    app.shortlink:
        class: AppBundle\Service\ShortLinkService
        arguments:
            logger: "@logger"
            googleAppName: %google_appname%
            googleApiKey: %google_apikey%

    app.address:
        class: AppBundle\Service\PCAService
        arguments:
            dm:          "@doctrine_mongodb.odm.default_document_manager"
            logger:      "@logger"
            apiKey:      "%pca_apikey%"
            environment: "%kernel.environment%"
            redis:       "@snc_redis.default"

    app.geoip:
        class: AppBundle\Service\MaxMindIpService
        arguments:
            logger: "@logger"
            db:     "%geoip_db%"

    app.cognito.identity:
        class: AppBundle\Service\CognitoIdentityService
        arguments:
            logger:         "@logger"
            dm:             "@doctrine_mongodb.odm.default_document_manager"
            coginto:        "@aws.cognito"
            developerLogin: "%cognito_developer_login%"
            identityPoolId: "%aws_cognito_identitypoolid%"

    base.imei:
        abstract: true
        class: AppBundle\Service\BaseImeiService
        calls:
            - [setLogger, ['@monolog.logger.receperio']]
            - [setDm, ['@doctrine_mongodb.odm.default_document_manager']]
            - [setRedis, ['@snc_redis.default']]

    app.imei:
        parent: base.imei
        class: AppBundle\Service\ReceperioService
        calls:
            - [setSecretKey, ['%receperio_secretkey%']]
            - [setStoreId, ['%receperio_storeid%']]
            - [setEnvironment, ['%kernel.environment%']]

    app.deviceatlas:
        class: AppBundle\Service\DeviceAtlasService
        arguments:
            logger: "@logger"
            dm:     "@doctrine_mongodb.odm.default_document_manager"

    app.sms:
        class: AppBundle\Service\SmsService
        arguments:
            dm:             "@doctrine_mongodb.odm.default_document_manager"
            logger:         "@logger"
            router:         "@router"
            auth_id:        "%plivo_authid%"
            auth_token:     "%plivo_authtoken%"
            sending_number: "%plivo_sendingnumber%"

    app.branch:
        class: AppBundle\Service\BranchService
        arguments:
            logger:            "@logger"
            router:            "@router"
            redis:             "@snc_redis.default"
            environment:       "%kernel.environment%"
            branchKey:         "%branch_key%"
            googleAppDownload: "%google_app_download%"
            appleAppDownload": "%apple_app_download%"

    app.twig.branch:
        class: AppBundle\Service\BranchTwigExtension
        arguments:
            branch:       "@app.branch"
            requestStack: "@request_stack"
            logger:       "@logger"
        public: false
        tags:
            - { name: twig.extension }

    app.excel:
        class: AppBundle\Service\ExcelService
        arguments:
            logger:         "@logger"

    app.salva:
        class: AppBundle\Service\SalvaExportService
        arguments:
            dm:             "@doctrine_mongodb.odm.default_document_manager"
            logger:         "@logger"
            baseUrl:        "%salva_url%"
            username:       "%salva_username%"
            password:       "%salva_password%"
            rootDir:        "%kernel.root_dir%"
            redis:          "@snc_redis.default"
            s3:             "@aws.s3"
            environment:    "%kernel.environment%"
        tags:
            - { name: monolog.logger, channel: salva }

    app.davies:
        class: AppBundle\Service\DaviesService
        arguments:
            dm:             "@doctrine_mongodb.odm.default_document_manager"
            logger:         "@logger"
            excel:          "@app.excel"
            s3:             "@aws.s3"
            claims:         "@app.claims"
        tags:
            - { name: monolog.logger, channel: davies }

    app.jwt:
        class: AppBundle\Service\JWTService
        arguments:
            logger:         "@logger"
            secret:         "%api_secret%"

    app.sequence:
        class: AppBundle\Service\SequenceService
        arguments:
            dm:             "@doctrine_mongodb.odm.default_document_manager"
            logger:         "@logger"

    app.policy:
        class: AppBundle\Service\PolicyService
        arguments:
            dm:          "@doctrine_mongodb.odm.default_document_manager"
            logger:      "@logger"
            sequence:    "@app.sequence"
            mailer:      "@mailer"
            smtp:        "@swiftmailer.transport.real"
            templating:  "@templating"
            router:      "@api.router"
            environment: "%kernel.environment%"
            snappy_pdf:  "@knp_snappy.pdf"
            dispatcher:  "@event_dispatcher"
            s3:          "@aws.s3"
            shortLink:   "@app.shortlink"

    app.ratelimit:
        class: AppBundle\Service\RateLimitService
        arguments:
            redis:          "@snc_redis.default"
            logger:         "@logger"
            environment:    "%kernel.environment%"

    app.stats:
        class: AppBundle\Service\StatsService
        arguments:
            redis:          "@snc_redis.default"
            logger:         "@logger"

    app.logger.rollbar:
        class: AppBundle\Classes\Rollbar
        arguments:
            - access_token: '%rollbar_access_token%'

    app.logger.lineformatter:
        class: Monolog\Formatter\LineFormatter
        calls:
            - [includeStacktraces]

    aws.credentials:
        class: Aws\Credentials\Credentials
        arguments:
            key: "%aws_key%"
            secret: "%aws_secret%"

    aws.cognito:
        class: Aws\CognitoIdentity\CognitoIdentityClient
        arguments:
            -
                version: "latest"
                region: "eu-west-1"
                credentials: "@aws.credentials"

    aws.sns:
        class: Aws\Sns\SnsClient
        arguments:
            -
                version: "latest"
                region: "eu-west-1"
                credentials: "@aws.credentials"

    aws.s3:
        class: Aws\S3\S3Client
        arguments:
            -
                version: "latest"
                region: "eu-west-1"
                credentials: "@aws.credentials"

    api.router:
        class: AppBundle\Service\ApiRouterService
        arguments:
            router: "@router"
            listenPort: 8080
            httpPort: 80
            httpsPort: 443

    app.voter.user:
        class: AppBundle\Security\UserVoter
        tags:
            - { name: security.voter }

    app.voter.policy:
        class: AppBundle\Security\PolicyVoter
        tags:
            - { name: security.voter }

    app.voter.invitation:
        class: AppBundle\Security\InvitationVoter
        tags:
            - { name: security.voter }

    doctrine.listener.invitation:
        class:   AppBundle\Listener\DoctrineInvitationListener
        arguments:
            dispatcher: "@event_dispatcher"
        tags:
            -  { name: doctrine_mongodb.odm.event_listener, event: postPersist }
            -  { name: doctrine_mongodb.odm.event_listener, event: postUpdate  }

    doctrine.listener.user:
        class:   AppBundle\Listener\DoctrineUserListener
        arguments:
            dispatcher: "@event_dispatcher"
        tags:
            -  { name: doctrine_mongodb.odm.event_listener, event: postPersist }
            -  { name: doctrine_mongodb.odm.event_listener, event: preUpdate  }
            -  { name: doctrine_mongodb.odm.event_listener, event: postUpdate  }

    doctrine.listener.salva:
        class:   AppBundle\Listener\DoctrineSalvaListener
        arguments:
            dispatcher:  "@event_dispatcher"
            environment: "%kernel.environment%"
        tags:
            -  { name: doctrine_mongodb.odm.event_listener, event: preUpdate  }

    app.listener.invitation:
        class:   AppBundle\Listener\InvitationListener
        arguments:
            dm: "@doctrine_mongodb.odm.default_document_manager"
        tags:
            -  { name: kernel.event_listener, event: event.invitation.updated, method: onInvitationEvent }

    app.listener.user:
        class:   AppBundle\Listener\UserListener
        arguments:
            dm: "@doctrine_mongodb.odm.default_document_manager"
        tags:
            -  { name: kernel.event_listener, event: event.user.updated, method: onUserUpdatedEvent }

    app.listener.salva:
        class:   AppBundle\Listener\SalvaListener
        arguments:
            salva: "@app.salva"
        tags:
            -  { name: kernel.event_listener, event: event.policy.created, method: onPolicyCreatedEvent }
            -  { name: kernel.event_listener, event: event.policy.updated, method: onPolicyUpdatedEvent }
            -  { name: kernel.event_listener, event: event.policy.cancelled, method: onPolicyCancelledEvent }

    app.listener.refund:
        class:   AppBundle\Listener\RefundListener
        arguments:
            judopay: "@app.judopay"
            logger:  "@logger"
        tags:
            -  { name: kernel.event_listener, event: event.policy.cancelled, method: onPolicyCancelledEvent }

    app.form.type.usersearch:
        class: AppBundle\Form\Type\UserSearchType
        arguments: ["@request_stack"]
        tags:
            - { name: form.type }

    app.form.type.phonesearch:
        class: AppBundle\Form\Type\PhoneSearchType
        arguments: ["@request_stack"]
        tags:
            - { name: form.type }

    app.form.type.claim:
        class: AppBundle\Form\Type\ClaimType
        arguments: ["@app.imei"]
        tags:
            - { name: form.type }

    rollbar.voter.notfound:
        class: AppBundle\Security\NotFoundHttpExceptionVoter
        tags:
            - { name: staffim_rollbar.report_voter }

    rollbar.voter.untrustedhost:
        class: AppBundle\Security\UntrustedHostUnexpectedValueExceptionVoter
        tags:
            - { name: staffim_rollbar.report_voter }

    rollbar.voter.runtime:
        class: AppBundle\Security\RuntimeExceptionVoter
        tags:
            - { name: staffim_rollbar.report_voter }

    sitemap.phone:
        class: AppBundle\Service\PhoneSitemapGenerator
        arguments:
            dm:          "@doctrine_mongodb.odm.default_document_manager"
            logger:      "@logger"
            router:      "@router"
        tags:
            - { name: dpn_xml_sitemap.generator }