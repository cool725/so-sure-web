// mixins.scss

/// Mixin printing a linear-gradient
/// as well as a plain color fallback
/// and the `-webkit-` prefixed declaration
/// @access public
/// @param {String | List | Angle} $direction - Linear gradient direction
/// @param {Arglist} $color-stops - List of color-stops composing the gradient
@mixin linear-gradient($direction, $color-stops...) {
  @if is-direction($direction) == false {
    $color-stops: ($direction, $color-stops);
    $direction: 180deg;
  }

  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}

// Single side border-radius

@mixin border-radius($radius: $border-radius) {
    border-radius: $radius;
}

@mixin border-top-radius($radius) {
    border-top-left-radius: $radius;
    border-top-right-radius: $radius;
}

@mixin border-right-radius($radius) {
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
}

@mixin border-bottom-radius($radius) {
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin border-left-radius($radius) {
    border-top-left-radius: $radius;
    border-bottom-left-radius: $radius;
}

@mixin transition($transition...) {
    @if $enable-transitions {
        @if length($transition) == 0 {
            transition: $transition-base;
        } @else {
            transition: $transition;
        }
    }

    @media screen and (prefers-reduced-motion: reduce) {
        transition: none;
    }
}
