# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:

services:
    app.user:
        class: AppBundle\Service\FOSUBUserProvider
        arguments: ["@fos_user.user_manager",{facebook: facebook_id}]
        calls:
            - [setFacebook, ['@app.facebook']]

    app.facebook:
        class: AppBundle\Service\FacebookService
        arguments:
            logger:    "@logger"
            router:    "@router"
            fb_appid:  "%fb_appid%"
            fb_secret: "%fb_secret%"

    app.mailchimp.prelaunch:
        class: AppBundle\Service\MailchimpService
        arguments:
          logger: "@logger"
          apikey: %mailchimp_apikey%
          list: %mailchimp_prelaunch_list%
          environment: %kernel.environment%

    app.gocardless:
        class: AppBundle\Service\GocardlessService
        arguments:
            logger: "@logger"
            accessToken: %gocardless_apikey%
            prod: %gocardless_prod%

    app.judopay:
        class: AppBundle\Service\JudopayService
        arguments:
            doctrine: "@doctrine_mongodb"
            logger: "@logger"
            apiToken: %judopay_apitoken%
            apiSecret: %judopay_apisecret%
            judoId: %judopay_id%

    app.user.launch:
        class: AppBundle\Service\LaunchUserService
        arguments:
            doctrine: "@doctrine_mongodb"
            logger: "@logger"
            mailchimp: "@app.mailchimp.prelaunch"
            mailer: "@mailer"
            templating: "@templating"
            router: "@api.router"
            shortLink: "@app.shortlink"

    app.shortlink:
        class: AppBundle\Service\ShortLinkService
        arguments:
            logger: "@logger"
            googleAppName: %google_appname%
            googleApiKey: %google_apikey%

    app.address:
        class: AppBundle\Service\PCAService
        arguments:
            logger: "@logger"
            apiKey: %pca_apikey%

    app.geoip:
        class: AppBundle\Service\MaxMindIpService
        arguments:
            logger: "@logger"
            db:     "%geoip_db%"

    app.cognito.identity:
        class: AppBundle\Service\CognitoIdentityService
        arguments:
            logger:         "@logger"
            doctrine:       "@doctrine_mongodb"
            coginto:        "@aws.cognito"
            developerLogin: "%cognito_developer_login%"
            identityPoolId: "%aws_cognito_identitypoolid%"

    aws.credentials:
        class: Aws\Credentials\Credentials
        arguments:
            key: "%aws_key%"
            secret: "%aws_secret%"

    aws.cognito:
        class: Aws\CognitoIdentity\CognitoIdentityClient
        arguments:
            -
                version: "latest"
                region: "eu-west-1"
                credentials: "@aws.credentials"

    aws.sns:
        class: Aws\Sns\SnsClient
        arguments:
            -
                version: "latest"
                region: "eu-west-1"
                credentials: "@aws.credentials"

    api.router:
        class: AppBundle\Service\ApiRouterService
        arguments:
            router: "@router"
            listenPort: 8080
            httpPort: 80
            httpsPort: 443
